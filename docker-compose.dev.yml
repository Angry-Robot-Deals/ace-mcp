name: ace-mcp-dev

services:
  ace-server:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ace-mcp-server-dev
    ports:
      - "${ACE_SERVER_PORT:-34301}:${ACE_SERVER_PORT:-34301}"
    volumes:
      - ./src:/app/src:ro
      - ./contexts:/app/contexts
      - ./logs:/app/logs
      - ./backups:/app/backups
      - /app/node_modules
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - ACE_CONTEXT_DIR=/app/contexts
      - ACE_LOG_LEVEL=${DEV_LOG_LEVEL:-debug}
    networks:
      - ace-network-dev
    command: npm run dev
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Health check')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ace-dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: ace-dashboard-dev
    ports:
      - "${DEV_DASHBOARD_PORT:-34300}:80"
    depends_on:
      - ace-server
    networks:
      - ace-network-dev
    volumes:
      - ./dashboard:/usr/share/nginx/html:ro
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development tools
  ace-dev-tools:
    image: node:lts
    container_name: ace-dev-tools
    working_dir: /app
    volumes:
      - .:/app
    networks:
      - ace-network-dev
    command: tail -f /dev/null
    profiles:
      - dev-tools

volumes:
  contexts:
    name: ace_contexts_dev
  logs:
    name: ace_logs_dev

networks:
  ace-network-dev:
    name: ace_network_dev
    driver: bridge
